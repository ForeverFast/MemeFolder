<Window x:Class="MemeFolder.MVVM.Views.MainWindowV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:converter="clr-namespace:MemeFolder.Wpf.Converters;assembly=MemeFolder.Wpf"
        xmlns:vm="clr-namespace:MemeFolder.MVVM.ViewModels"  
        xmlns:m="clr-namespace:MemeFolder.Domain.Models;assembly=MemeFolder.Domain"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:ii="av"
        xmlns:local="clr-namespace:MemeFolder.MVVM.Views"
        d:DataContext="{d:DesignInstance vm:MainWindowVM, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        Height="800" Width="1500"
        MinHeight="600" MinWidth="800" WindowStyle="SingleBorderWindow">

    <Window.Resources>


        <converter:ManyValuesConverter x:Key="ManyValueConverter"/>
        <converter:StringToBoolConverter x:Key="StringToBoolConverter"/>
        <converter:ObjectToBoolConverter x:Key="ObjectToBoolConverter"/>

        <!--<DataTemplate x:Key="SearchGrid" DataType="{x:Type Grid}">
            <Border x:Name="Border">
                
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Source=SearchTB, Path=Text}" Value="">
                    <Setter Property="Visibility" TargetName="Border" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>-->
        

    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="35"
                                  CornerRadius="0"
                                  
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="3"
                                  UseAeroCaptionButtons="True">

                    </WindowChrome>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderThickness="0,0,0,0">
                            <ContentPresenter x:Name="CP" Content="{TemplateBinding Content}" Grid.Row="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WindowState" Value="Normal">
                                <Setter Property="Margin" TargetName="CP" Value="0"/>
                            </Trigger>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Margin" TargetName="CP" Value="8,10,10,10"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Style>

    <Grid Background="{DynamicResource DimColor}">

        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="ContentGrid" Grid.Row="1" Grid.Column="1"
              Background="{DynamicResource GrayLVL3}">
            <Frame x:Name="FrameContent" Margin="0,0,0,0" BorderThickness="0,0,0,0"
                   NavigationUIVisibility="Hidden"/>
        </Grid>
        
        <Grid x:Name="HeaderGrid" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
              Background="{DynamicResource GrayLVL4}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="220"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Background="{x:Null}">

            </Grid>

            <Grid Grid.Column="1" Background="{x:Null}">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="NavigationBack"
                                    WindowChrome.IsHitTestVisibleInChrome="True"                                            
                                    Command="{Binding NavigationBackCommand}"
                                    Style="{StaticResource NavigationBack}"/>

                    <Button x:Name="NavigationForward"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding NavigationForwardCommand}"
                            Style="{StaticResource NavigationForward}"/>
                </StackPanel>
            </Grid>

            
            
            <Grid Grid.Column="2" Background="{x:Null}" >

                <TextBox x:Name="SearchTB"
                         Style="{StaticResource TB_Search}"
                         WindowChrome.IsHitTestVisibleInChrome="True"   
                         Height="28">

                
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding SearchCommand}"
                                                   CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox},
                                                                              Path=Text}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>


            </Grid>

            <Grid Grid.Column="3" Background="{x:Null}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Name="Settings"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding OpenSettingsCommand}"
                            Background="{StaticResource GrayLVL4}"
                            Style="{StaticResource SettingsButton}"/>
                    <Button x:Name="Minimize"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding MinimizedWindowCommand}"
                            Background="{StaticResource GrayLVL4}"
                            Style="{StaticResource MinimizeButton}"/>

                    <Button x:Name="Resize"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding ResizeWindowCommand}"
                            Background="{DynamicResource GrayLVL4}"
                            Style="{StaticResource ResizeButton}"/>

                    <Button x:Name="Close"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding CloseWindowCommand}"
                            Background="{DynamicResource GrayLVL4}"
                            Style="{StaticResource CloseButton}"/>
                </StackPanel>
            </Grid>

        </Grid>

        
        <Grid x:Name="MenuGrid" Grid.Row="1" Grid.Column="0"
              Background="{StaticResource  GrayLVL3}">

            <TreeView ItemsSource="{Binding Folders}" Foreground="{DynamicResource Gor}">
                <TreeView.Resources>
                    <!-- template for showing the Enterprise's properties
                     the ItemsSource specifies what the next nested level's
                     datasource is -->
                    <HierarchicalDataTemplate DataType="{x:Type vm:FolderVM}"
                                          ItemsSource="{Binding Children}">
                        <Label Content="{Binding Model.Title}"
                               Foreground="{DynamicResource Gor}"/>
                    </HierarchicalDataTemplate>
                    <!-- the template for showing the Employee's properties-->
                    <DataTemplate DataType="{x:Type m:Folder}">
                        <Label Content="{Binding Title}"
                               Foreground="{DynamicResource Gor}"/>
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
            
        </Grid>

        
        <Grid x:Name="FooterGrid" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
              Background="{StaticResource LightLVL0}">
            
        </Grid>

    </Grid>
</Window>
