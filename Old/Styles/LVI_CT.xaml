<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="LBI_Meme_old" TargetType="{x:Type ListViewItem}">

        <Border Name="Border"
                Height="110" Width="110"
                Background="{TemplateBinding Background}"
                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                              AncestorType={x:Type ListBox}},
                              Path=DataContext}">
            <Border.InputBindings>

                <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type ListBox}},
                                         Path=DataContext.OpenMemePictureCommand}"
                              CommandParameter="{Binding}"/>
                <MouseBinding Gesture="LeftClick"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type ListBox}},
                                         Path=DataContext.CopyMemeInBufferCommand}"
                              CommandParameter="{Binding}"/>

            </Border.InputBindings>

            <Border.ContextMenu>
                <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">

                    <MenuItem Header="Открыть"
                              Command="{Binding Tag.OpenMemePictureCommand}"
                              CommandParameter="{Binding DataContext}"/>
                    <MenuItem Header="Переименовать"
                              Command="{Binding Tag.OpenEditTitleCommand}"/>
                    <MenuItem Header="Удалить" 
                              Command="{Binding Tag.RemoveMemeCommand}"
                              CommandParameter="{Binding DataContext}"/>

                </ContextMenu>
            </Border.ContextMenu>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--, Converter={StaticResource BItoIS}-->
                <Image Grid.Row="0" Source="{Binding Image, Mode=OneTime}">
                    <!--<Image.Style>
                        <Style TargetType="Image">

                            <Style.Triggers>
                                <Trigger Property="IsVisible" Value="True">
                                    <Setter Property="Source" Value="{Binding Image}"/>
                                </Trigger>
                                <Trigger Property="IsVisible" Value="False">
                                    <Setter Property="Source" Value="{x:Null}"/>
                                </Trigger>

                            </Style.Triggers>
                        </Style>
                    </Image.Style>-->
                    <!--<Image.Source>
                        <BitmapImage UriSource="{Binding ImagePath}"
                                     CacheOption="None"
                                     CreateOptions="IgnoreImageCache"
                                     DecodePixelWidth="120"/>
                    </Image.Source>-->
                </Image>




                <Canvas Name="Canvas" Grid.Row="1"
                                                ClipToBounds="True">
                    <TextBlock Padding="0"
                               Canvas.Left="5"
                               Canvas.Top="6"
                                                       
                                                       
                               FontSize="15"
                               Foreground="{DynamicResource StandartTextColor}"
                               TextTrimming="WordEllipsis"
                               Text="{Binding Title}">


                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="TextBlock.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)" From="5" To="-100" 
                                                                                     Duration="0:0:10" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="TextBlock.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)" To="5" 
                                                                                     Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </Canvas>


                <TextBox Name="TextBoxEdit" Grid.Row="1" Background="White"
                         Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsFocused}" Value="False"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextBoxEdit}"/>
                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsFocused}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextBoxEdit}"/>
                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                Path=IsFocused}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>

                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>


                </TextBox>

                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="FocusManager.LostFocus" SourceName="TextBoxEdit">
                        <i:InvokeCommandAction  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                      AncestorType={x:Type ListBox}},
                                                                      Path=DataContext.CloseEditTitleCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->

            </Grid>

        </Border>

    </ControlTemplate>

    <ControlTemplate x:Key="LBI_Folder_Old" TargetType="{x:Type ListViewItem}">
        <Border Name="Border"
                Height="110" Width="110"
                Background="{TemplateBinding Background}"
                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                              AncestorType={x:Type ListBox}},
                              Path=DataContext}">

            <Border.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type ListBox}},
                                         Path=DataContext.NavigationToFolderCommand}"
                              CommandParameter="{Binding}"/>
            </Border.InputBindings>

            <Border.ContextMenu>
                <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Открыть"
                              Command="{Binding Tag.NavigationToFolderCommand}"
                              CommandParameter="{Binding DataContext}"/>
                    <MenuItem Header="Переименовать"
                              Command="{Binding Tag.OpenEditTitleCommand}"/>
                    <MenuItem Header="Удалить" 
                              Command="{Binding Tag.RemoveFolderCommand}"
                              CommandParameter="{Binding DataContext}"/>
                </ContextMenu>
            </Border.ContextMenu>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--<md:PackIcon Kind="Folder" Grid.Row="0"
                            Foreground="{DynamicResource GrayLVL0}"
                            Height="100" Width="100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>-->

                <TextBlock Grid.Row="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                                       FontStretch="Condensed"             
                            Text="{Binding Title}"
                            Foreground="{DynamicResource StandartLightColor}"
                            FontSize="16"/>

                <TextBox Name="TextBoxEdit" Grid.Row="1" Background="White"
                         Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsFocused}" Value="False"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsFocused}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextBoxEdit}"/>
                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType={x:Type ListBox}},
                                                                Path=DataContext.IsOpenForEditTitle}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                                                Path=IsFocused}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>

                                    </MultiDataTrigger.Setters>

                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>


                </TextBox>

                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="FocusManager.LostFocus" SourceName="TextBoxEdit">
                        <i:InvokeCommandAction  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                      AncestorType={x:Type ListBox}},
                                                                      Path=DataContext.CloseEditTitleCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->


            </Grid>
        </Border>
    </ControlTemplate>
    
</ResourceDictionary>