<Window x:Class="MemeFolder.Views.MainWindowV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:converter="clr-namespace:MemeFolder.Converters"
        xmlns:vm="clr-namespace:MemeFolder.ViewModels"  
        xmlns:ib="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:m="clr-namespace:MemeFolder.Domain.Models;assembly=MemeFolder.Domain"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:abs="clr-namespace:MemeFolder.Abstractions"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:MemeFolder.Views"
        xmlns:loadingspinnercontrol="clr-namespace:LoadingSpinnerControl;assembly=LoadingSpinnerControl"
        d:DataContext="{d:DesignInstance vm:MainWindowVM, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        Height="800" Width="1500"
        MinHeight="600" MinWidth="822"
        WindowStyle="SingleBorderWindow"
        WindowStartupLocation="CenterOwner">

    <Window.Resources>
       
        <converter:ManyValuesConverter x:Key="ManyValueConverter"/>
        <converter:ManyValuesConverter x:Key="ManyValueConverter2"/>
        <converter:StringToBoolConverter x:Key="StringToBoolConverter"/> 
        <converter:ObjectToBoolConverter x:Key="ObjectToBoolConverter"/>

        <abs:ObjectType x:Key="OT_MemeTag">
            MemeTag
        </abs:ObjectType>

        <!--<DataTemplate x:Key="SearchGrid" DataType="{x:Type Grid}">
            <Border x:Name="Border">
                
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Source=SearchTB, Path=Text}" Value="">
                    <Setter Property="Visibility" TargetName="Border" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>-->
        
        <!--<sys:String x:Key="FolderStr">Folder</sys:String>
        <sys:String x:Key="MemeStr">Meme</sys:String>
        <sys:String x:Key="MemeTagStr">MemeTag</sys:String>-->

    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="35"
                                  CornerRadius="0"
                                  
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="3"
                                  UseAeroCaptionButtons="True">

                    </WindowChrome>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderThickness="0,0,0,0">
                            <ContentPresenter x:Name="CP" Content="{TemplateBinding Content}" Grid.Row="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WindowState" Value="Normal">
                                <Setter Property="Margin" TargetName="CP" Value="0"/>
                            </Trigger>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Margin" TargetName="CP" Value="8,10,10,10"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Style>

    <Grid Background="{DynamicResource DimColor}">

        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        
        <Grid x:Name="ContentGrid" Grid.Row="1" Grid.Column="1"
              Background="{DynamicResource GrayLVL3}">
            <Frame x:Name="FrameContent" Margin="0,0,0,0" 
                   BorderThickness="0,0,0,0"
                   NavigationUIVisibility="Hidden"/>
        </Grid>

        <Border x:Name="HeaderGrid" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                BorderBrush="{DynamicResource GrayLVL0}"
                BorderThickness="0,0,0,0.25">
            
            <Grid Background="{DynamicResource GrayLVL4}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="500"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Background="{x:Null}">

                </Grid>

                <Grid Grid.Column="1" Background="{x:Null}">
                    <StackPanel Orientation="Horizontal">
                        <Button WindowChrome.IsHitTestVisibleInChrome="True"                                            
                            Command="{Binding NavigationBackCommand}"
                            Style="{StaticResource NavigationBack}"/>

                        <Button WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding NavigationForwardCommand}"
                            Style="{StaticResource NavigationForward}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Column="2">
                    <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left">
                        <TextBox x:Name="SearchTB"
                             Style="{StaticResource TB_Search}"
                        
                             Margin="10,0"
                             WindowChrome.IsHitTestVisibleInChrome="True"   
                             Height="28" Width="280">

                            <ib:Interaction.Triggers>
                                <ib:EventTrigger EventName="TextChanged">
                                    <ib:InvokeCommandAction Command="{Binding EmptySearchTextCheckCommand}"
                                                        CommandParameter="{Binding ElementName=SearchTB,
                                                                                   Path=Text}"/>
                                </ib:EventTrigger>
                            </ib:Interaction.Triggers>

                        </TextBox>
                        <Button Style="{DynamicResource SearchButton}"
                            Command="{Binding SearchCommand}"
                            CommandParameter="{Binding ElementName=SearchTB,
                                                       Path=Text}"
                            WindowChrome.IsHitTestVisibleInChrome="True"   />
                    </StackPanel>


                </Grid>

                <Grid Grid.Column="3" Background="{x:Null}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button x:Name="SettingsButton"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding OpenSettingsCommand}"
                            Background="{StaticResource GrayLVL4}"
                            Style="{StaticResource SettingsButton}"/>
                        <Button x:Name="MinimizeButton"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding MinimizedWindowCommand}"
                            Background="{StaticResource GrayLVL4}"
                            Style="{StaticResource MinimizeButton}"/>

                        <Button x:Name="ResizeButton"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding ResizeWindowCommand}"
                            Background="{DynamicResource GrayLVL4}"
                            Style="{StaticResource ResizeButton}"/>

                        <Button x:Name="CloseButton"
                            WindowChrome.IsHitTestVisibleInChrome="True"      
                            Command="{Binding CloseWindowCommand}"
                            Background="{DynamicResource GrayLVL4}"
                            Style="{StaticResource CloseButton}"/>
                    </StackPanel>
                </Grid>

            </Grid>

        </Border>

        <Border x:Name="MenuGrid" Grid.Row="1" Grid.Column="0"
                BorderBrush="{DynamicResource GrayLVL0}"
                BorderThickness="0,0,0.25,0">
            
            <Grid Background="{StaticResource GrayLVL3}">

                <TreeView ItemsSource="{Binding Folders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Foreground="{DynamicResource StandartLightColor2}"
                          ItemContainerStyle="{DynamicResource TreeViewItemStyle}"
                          
                          Margin="10">

                    <TreeView.Resources>

                        <HierarchicalDataTemplate DataType="{x:Type m:Folder}"
                                              ItemsSource="{Binding Folders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Border Height="25"
                                    Tag="{Binding DataContext,
                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">

                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick"
                                                  Command="{Binding DataContext.NavigationToFolderCommand,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                                                  CommandParameter="{Binding}"/>
                                </Border.InputBindings>

                                <Border.ContextMenu>
                                    <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Открыть"
                                                  CommandParameter="{Binding DataContext}"
                                                  Command="{Binding Tag.NavigationToFolderCommand}" />
                                        <MenuItem Header="Создать папку"
                                                  CommandParameter="{Binding DataContext}"
                                                  Command="{Binding Tag.AddFolderCommand}"/>
                                        <MenuItem Header="Создать папку с параметрами"
                                                  CommandParameter="{Binding DataContext}"
                                                  Command="{Binding Tag.OpenAddFolderDialogCommand}"/>
                                        <MenuItem Header="Изменить"
                                                  CommandParameter="{Binding DataContext}"
                                                  Command="{Binding Tag.OpenEditFolderDialogCommand}"/>
                                        <MenuItem Header="Удалить" 
                                                  CommandParameter="{Binding DataContext}"
                                                  Command="{Binding Tag.RemoveFolderCommand}"/>
                                    </ContextMenu>
                                </Border.ContextMenu>

                                <TextBlock Text="{Binding Title}"
                                           FontSize="14"
                                           VerticalAlignment="Center"/>

                            </Border>


                        </HierarchicalDataTemplate>

                    </TreeView.Resources>

                    <TreeView.Template>
                        <ControlTemplate TargetType="ItemsControl">

                            <ScrollViewer Style="{DynamicResource ContentSV}"
                                          ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                            
                        </ControlTemplate>
                    </TreeView.Template>
                    
                </TreeView>

            </Grid>
            
        </Border>
       

        
        <Grid x:Name="FooterGrid" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
              Background="{StaticResource GrayLVL4}">

            <Grid.ColumnDefinitions>
                
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="*"/>
               
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Style="{DynamicResource AddNewTagButton}"
                    Command="{Binding OpenAddMemeTagDialogCommand}"/>

            <ListBox Grid.Column="1"
                     ItemsSource="{Binding MemeTags}"
                     Style="{DynamicResource TagLB}"
                     Background="{DynamicResource GrayLVL4}">

                <ListBox.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" 
                                
                                CommandTarget="{Binding ElementName=ScrollElem}"
                                Command="{x:Static ScrollBar.LineLeftCommand}"
                                
                                VerticalAlignment="Center"
                                Style="{DynamicResource NavigationBack2}"/>

                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                          x:Name="ScrollElem"
                                          CanContentScroll="True"
                                          PreviewMouseWheel="empListBox_PreviewMouseWheel"
                                          Grid.Column="1">
                                <ItemsPresenter />
                            </ScrollViewer>

                            <Button Grid.Column="2"
                                                              
                                CommandTarget="{Binding ElementName=ScrollElem}"
                                Command="{x:Static ScrollBar.LineRightCommand}"
                               
                                VerticalAlignment="Center"
                                Style="{DynamicResource NavigationForward2}"/>
                        </Grid>

                     

                    </ControlTemplate>
                </ListBox.Template>
                
                
                
            </ListBox>

          

        </Grid>


        <md:DialogHost Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="3"
                       CloseOnClickAway="False"
                       Identifier="RootDialog"/>


    </Grid>
</Window>
